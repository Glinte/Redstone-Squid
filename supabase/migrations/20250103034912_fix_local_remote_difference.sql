create extension if not exists "vector" with schema "extensions";


create table "public"."build_edit_history" (
    "build_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "version" smallint not null
);


alter table "public"."build_edit_history" enable row level security;

create table "public"."build_vote_sessions" (
    "session_id" bigint generated by default as identity not null,
    "build_id" bigint not null,
    "changes" jsonb not null
);


alter table "public"."build_vote_sessions" enable row level security;

create table "public"."vote_sessions" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "status" text not null,
    "author_id" bigint not null,
    "kind" text not null
);


alter table "public"."vote_sessions" enable row level security;

create table "public"."votes" (
    "vote_session_id" bigint generated by default as identity not null,
    "user_id" bigint not null,
    "weight" double precision
);


alter table "public"."votes" enable row level security;

alter table "public"."build_creators" enable row level security;

alter table "public"."build_links" enable row level security;

alter table "public"."build_restrictions" enable row level security;

alter table "public"."build_types" enable row level security;

alter table "public"."build_versions" enable row level security;

alter table "public"."builds" alter column "edited_time" set default (now() AT TIME ZONE 'utc'::text);

alter table "public"."builds" enable row level security;

alter table "public"."messages" enable row level security;

alter table "public"."restrictions" enable row level security;

alter table "public"."server_settings" add column "staff_roles_ids" bigint[];

alter table "public"."server_settings" add column "trusted_roles_ids" bigint[];

alter table "public"."server_settings" enable row level security;

alter table "public"."utilities" enable row level security;

alter table "public"."verification_codes" alter column "username" drop default;

alter table "public"."verification_codes" enable row level security;

alter table "public"."versions" alter column "major_version" set data type smallint using "major_version"::smallint;

alter table "public"."versions" alter column "minor_version" set data type smallint using "minor_version"::smallint;

alter table "public"."versions" alter column "patch_number" set data type smallint using "patch_number"::smallint;

alter table "public"."versions" enable row level security;

CREATE UNIQUE INDEX build_edit_history_pkey ON public.build_edit_history USING btree (build_id);

CREATE UNIQUE INDEX build_vote_sessions_pkey ON public.build_vote_sessions USING btree (session_id, build_id);

CREATE UNIQUE INDEX unique_version_per_build ON public.build_edit_history USING btree (build_id, version);

CREATE UNIQUE INDEX vote_sessions_pkey ON public.vote_sessions USING btree (id);

CREATE UNIQUE INDEX votes_pkey ON public.votes USING btree (vote_session_id, user_id);

alter table "public"."build_edit_history" add constraint "build_edit_history_pkey" PRIMARY KEY using index "build_edit_history_pkey";

alter table "public"."build_vote_sessions" add constraint "build_vote_sessions_pkey" PRIMARY KEY using index "build_vote_sessions_pkey";

alter table "public"."vote_sessions" add constraint "vote_sessions_pkey" PRIMARY KEY using index "vote_sessions_pkey";

alter table "public"."votes" add constraint "votes_pkey" PRIMARY KEY using index "votes_pkey";

alter table "public"."build_edit_history" add constraint "build_edit_history_build_id_fkey" FOREIGN KEY (build_id) REFERENCES builds(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."build_edit_history" validate constraint "build_edit_history_build_id_fkey";

alter table "public"."build_edit_history" add constraint "unique_version_per_build" UNIQUE using index "unique_version_per_build";

alter table "public"."build_vote_sessions" add constraint "build_vote_sessions_build_id_fkey" FOREIGN KEY (build_id) REFERENCES builds(id) ON UPDATE CASCADE not valid;

alter table "public"."build_vote_sessions" validate constraint "build_vote_sessions_build_id_fkey";

alter table "public"."build_vote_sessions" add constraint "build_vote_sessions_session_id_fkey" FOREIGN KEY (session_id) REFERENCES vote_sessions(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."build_vote_sessions" validate constraint "build_vote_sessions_session_id_fkey";

alter table "public"."votes" add constraint "votes_vote_session_id_fkey" FOREIGN KEY (vote_session_id) REFERENCES vote_sessions(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."votes" validate constraint "votes_vote_session_id_fkey";

grant delete on table "public"."build_edit_history" to "anon";

grant insert on table "public"."build_edit_history" to "anon";

grant references on table "public"."build_edit_history" to "anon";

grant select on table "public"."build_edit_history" to "anon";

grant trigger on table "public"."build_edit_history" to "anon";

grant truncate on table "public"."build_edit_history" to "anon";

grant update on table "public"."build_edit_history" to "anon";

grant delete on table "public"."build_edit_history" to "authenticated";

grant insert on table "public"."build_edit_history" to "authenticated";

grant references on table "public"."build_edit_history" to "authenticated";

grant select on table "public"."build_edit_history" to "authenticated";

grant trigger on table "public"."build_edit_history" to "authenticated";

grant truncate on table "public"."build_edit_history" to "authenticated";

grant update on table "public"."build_edit_history" to "authenticated";

grant delete on table "public"."build_edit_history" to "service_role";

grant insert on table "public"."build_edit_history" to "service_role";

grant references on table "public"."build_edit_history" to "service_role";

grant select on table "public"."build_edit_history" to "service_role";

grant trigger on table "public"."build_edit_history" to "service_role";

grant truncate on table "public"."build_edit_history" to "service_role";

grant update on table "public"."build_edit_history" to "service_role";

grant delete on table "public"."build_vote_sessions" to "anon";

grant insert on table "public"."build_vote_sessions" to "anon";

grant references on table "public"."build_vote_sessions" to "anon";

grant select on table "public"."build_vote_sessions" to "anon";

grant trigger on table "public"."build_vote_sessions" to "anon";

grant truncate on table "public"."build_vote_sessions" to "anon";

grant update on table "public"."build_vote_sessions" to "anon";

grant delete on table "public"."build_vote_sessions" to "authenticated";

grant insert on table "public"."build_vote_sessions" to "authenticated";

grant references on table "public"."build_vote_sessions" to "authenticated";

grant select on table "public"."build_vote_sessions" to "authenticated";

grant trigger on table "public"."build_vote_sessions" to "authenticated";

grant truncate on table "public"."build_vote_sessions" to "authenticated";

grant update on table "public"."build_vote_sessions" to "authenticated";

grant delete on table "public"."build_vote_sessions" to "service_role";

grant insert on table "public"."build_vote_sessions" to "service_role";

grant references on table "public"."build_vote_sessions" to "service_role";

grant select on table "public"."build_vote_sessions" to "service_role";

grant trigger on table "public"."build_vote_sessions" to "service_role";

grant truncate on table "public"."build_vote_sessions" to "service_role";

grant update on table "public"."build_vote_sessions" to "service_role";

grant delete on table "public"."vote_sessions" to "anon";

grant insert on table "public"."vote_sessions" to "anon";

grant references on table "public"."vote_sessions" to "anon";

grant select on table "public"."vote_sessions" to "anon";

grant trigger on table "public"."vote_sessions" to "anon";

grant truncate on table "public"."vote_sessions" to "anon";

grant update on table "public"."vote_sessions" to "anon";

grant delete on table "public"."vote_sessions" to "authenticated";

grant insert on table "public"."vote_sessions" to "authenticated";

grant references on table "public"."vote_sessions" to "authenticated";

grant select on table "public"."vote_sessions" to "authenticated";

grant trigger on table "public"."vote_sessions" to "authenticated";

grant truncate on table "public"."vote_sessions" to "authenticated";

grant update on table "public"."vote_sessions" to "authenticated";

grant delete on table "public"."vote_sessions" to "service_role";

grant insert on table "public"."vote_sessions" to "service_role";

grant references on table "public"."vote_sessions" to "service_role";

grant select on table "public"."vote_sessions" to "service_role";

grant trigger on table "public"."vote_sessions" to "service_role";

grant truncate on table "public"."vote_sessions" to "service_role";

grant update on table "public"."vote_sessions" to "service_role";

grant delete on table "public"."votes" to "anon";

grant insert on table "public"."votes" to "anon";

grant references on table "public"."votes" to "anon";

grant select on table "public"."votes" to "anon";

grant trigger on table "public"."votes" to "anon";

grant truncate on table "public"."votes" to "anon";

grant update on table "public"."votes" to "anon";

grant delete on table "public"."votes" to "authenticated";

grant insert on table "public"."votes" to "authenticated";

grant references on table "public"."votes" to "authenticated";

grant select on table "public"."votes" to "authenticated";

grant trigger on table "public"."votes" to "authenticated";

grant truncate on table "public"."votes" to "authenticated";

grant update on table "public"."votes" to "authenticated";

grant delete on table "public"."votes" to "service_role";

grant insert on table "public"."votes" to "service_role";

grant references on table "public"."votes" to "service_role";

grant select on table "public"."votes" to "service_role";

grant trigger on table "public"."votes" to "service_role";

grant truncate on table "public"."votes" to "service_role";

grant update on table "public"."votes" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."build_creators"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."build_creators"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."build_edit_history"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."build_edit_history"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."build_links"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."build_restrictions"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."build_restrictions"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."build_types"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."build_types"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."build_versions"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."build_versions"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."builds"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."builds"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."doors"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."doors"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."messages"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."messages"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."restrictions"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."restrictions"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."server_settings"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."server_settings"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."utilities"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."utilities"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."versions"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."versions"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."vote_sessions"
as permissive
for insert
to authenticated, service_role
with check (true);


create policy "Enable read access for all users"
on "public"."vote_sessions"
as permissive
for select
to authenticated, service_role
using (true);


create policy "Enable insert for authenticated users only"
on "public"."votes"
as permissive
for insert
to authenticated
with check (true);
